{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"python 7day","version":"0.3.2","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"okFAosXf-RDc","colab_type":"code","outputId":"6fe72a27-7372-4346-b44d-5d44bbacb086","executionInfo":{"status":"ok","timestamp":1562580144123,"user_tz":-330,"elapsed":898,"user":{"displayName":"221810501001 ARUKONDA SAI KRISHNA","photoUrl":"","userId":"05734432239304171779"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Given Number is Prime Number or not\n","def isprime ( n ) :\n","    flag = True\n","    for i in range(2,n//2+1):\n","        if n % i == 0 :\n","            flag = false\n","            return flag\n","    return flag\n","isprime(11)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"id":"MPIFXZbE-1YY","colab_type":"code","outputId":"363f0d3f-f138-4822-a86d-f30778258fd6","executionInfo":{"status":"ok","timestamp":1562579903819,"user_tz":-330,"elapsed":866,"user":{"displayName":"221810501001 ARUKONDA SAI KRISHNA","photoUrl":"","userId":"05734432239304171779"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Function to find prime numbers count from 1 to n\n","# 10--4(2,3,5,7)\n","def primecount(n):\n","    cnt = 0\n","    for a in range(2,n+1):\n","        k=0\n","        for i in range(2,a//2+1):\n","            if a % i == 0 :\n","               k = k + 1\n","        if(k<=0):\n","            cnt = cnt + 1\n","    return cnt\n","primecount(10)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"JCVcvMZJARZa","colab_type":"code","outputId":"70e91d5b-1e3e-4092-edcd-2102e765abe8","executionInfo":{"status":"ok","timestamp":1562581628557,"user_tz":-330,"elapsed":895,"user":{"displayName":"221810501001 ARUKONDA SAI KRISHNA","photoUrl":"","userId":"05734432239304171779"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["# Individual digit factorial sum is same as original number\n","# Example :-\n","# 145 -- Yes (5! + 4! + 1! = 145)\n","# 123 --No   (3! + 2! + 1! = 9)\n","def factorial(n):\n","    fact = 1\n","    for i in range(2,n+1):\n","        fact *= i\n","    return fact\n","def digitfactsum(n):\n","    sum = 0\n","    buffer = n\n","    while n != 0 :\n","         r = n % 10\n","         sum += factorial(r)\n","         n = n // 10\n","    if sum == buffer:\n","         return \"Yes\"\n","    else:\n","          return \"no\"\n","    return\n","print(digitfactsum(145))\n","print(digitfactsum(123))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Yes\n","no\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"dhDuU9EpH5Lv","colab_type":"code","outputId":"f855ddfe-b51f-4374-9496-251c9692f7c6","executionInfo":{"status":"ok","timestamp":1562583299502,"user_tz":-330,"elapsed":902,"user":{"displayName":"221810501001 ARUKONDA SAI KRISHNA","photoUrl":"","userId":"05734432239304171779"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["# Function to return the count of palindrome number two limits\n","# Input : 1 10\n","# Output: 9(1,2,3,4,5,6,7,8,9)\n","\n","# Input : 11 100\n","# Output :9(11,22,33,44,55,66,77,88,99)\n","def ispalindrome(n):\n","    rev = 0\n","    buffer = n\n","    while n!= 0:\n","        r = n % 10\n","        rev = rev * 10 + r\n","        n = n // 10\n","    if rev == buffer:\n","         return True\n","    else:\n","         return False\n","    return\n","  \n","def countpalindrome(lb,ub):\n","    cnt = 0\n","    while lb != ub:\n","        # Implement\n","        if ispalindrome(lb) == True:\n","            cnt = cnt + 1\n","        lb = lb + 1\n","    return cnt\n","countpalindrome(1,10)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["9"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"GbQ1x412F9D-","colab_type":"code","outputId":"18157f2c-064c-4997-dffa-1a9d7371091f","executionInfo":{"status":"ok","timestamp":1562584482953,"user_tz":-330,"elapsed":3017,"user":{"displayName":"221810501001 ARUKONDA SAI KRISHNA","photoUrl":"","userId":"05734432239304171779"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["# Function to generate the perfect number in a given range\n","# Perfect Number : Sum of all its factors same as a original number\n","def factorslist(n):\n","    sum = 0\n","    for i in range(1,n//2+1):\n","      if n % i == 0:\n","          sum = sum + i\n","    return sum\n","def isperfect(n):\n","    if factorslist(n) == n:\n","        return True \n","    return False\n","def generateperfect(lb,ub):\n","    for x in range(lb,ub+1):\n","        if isperfect(x):\n","            print(x,end = \" \")\n","    print()\n","    return\n","  \n","generateperfect(1,10)\n","generateperfect(1,10000)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["6 \n","6 28 496 8128 \n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"08epXWc7SwjP","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"b62d67dd-2e9a-424f-c949-86bb29c44228","executionInfo":{"status":"ok","timestamp":1562578643764,"user_tz":-330,"elapsed":904,"user":{"displayName":"221810501001 ARUKONDA SAI KRISHNA","photoUrl":"","userId":"05734432239304171779"}}},"source":["# Function to print \"python\" if the count of \n","# Upper and lower case is same\n","# print \"programming\" if not same \n","# Example : PyThOn -- 3 P T O (Upper case) -- same count\n","#                     3 y h n (lower case)\n","# pytHon -- P H (2)\n","#        -- y t o n (4) - programming\n","def findcount(str):\n","    cntupper = 0\n","    cntlower = 0\n","    for x in range(len(str)):\n","        if ord(str[x]) >= 65 and ord(str[x]) <= 90:\n","           cntupper = cntupper + 1\n","        elif ord(str[x]) >= 97 and ord(str[x]) <= 122:\n","           cntlower = cntlower + 1\n","    if cntupper == cntlower:\n","      return \"same count\"\n","    else:\n","      return \"programming\"\n","    \n","    return\n","  \n","print(findcount('PyThOn')) # samecount\n","print(findcount('PYTHon')) # programming"],"execution_count":3,"outputs":[{"output_type":"stream","text":["same count\n","programming\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wX_P5z9s53hT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"1295b01a-2708-444b-c8fc-a4feb659b3b2","executionInfo":{"status":"ok","timestamp":1562578912395,"user_tz":-330,"elapsed":969,"user":{"displayName":"221810501001 ARUKONDA SAI KRISHNA","photoUrl":"","userId":"05734432239304171779"}}},"source":["# Extract digits from given string\n","# Example:\n","# Input : Appli1cat8ion89\n","# Output : 1 8 8 9\n","def extractDigits(str):\n","    for x in range(len(str)):\n","        if ord(str[x]) >= 48 and ord(str[x]) <= 57:\n","           print(str[x],end=\" \")\n","    return\n","extractDigits(\"Appli1cat8ion89\") # 1 8 8 9"],"execution_count":5,"outputs":[{"output_type":"stream","text":["1 8 8 9 "],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"EhrTFk-e9g_s","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"eaf94ffc-f78b-4c6d-95d5-5a8d0bd40ce6","executionInfo":{"status":"ok","timestamp":1562579624021,"user_tz":-330,"elapsed":933,"user":{"displayName":"221810501001 ARUKONDA SAI KRISHNA","photoUrl":"","userId":"05734432239304171779"}}},"source":["# Function to return the sum of digits in a given string\n","# Example :\n","# Input : Appli1cat8ion89\n","# Output : 26(1+8+8+9)\n","def sumofDigits(str):\n","    sum = 0\n","    for x in range(len(str)):\n","        if ord(str[x]) >= 48 and ord(str[x]) <= 57:\n","           sum = sum + (ord(str[x])-48)\n","    return sum\n","sumofDigits('Appli1cat8ion89')"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["26"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"UteyreLRAQHj","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"3ac1ed83-b438-403e-bb6f-927fcb536f59","executionInfo":{"status":"ok","timestamp":1562580073722,"user_tz":-330,"elapsed":1959,"user":{"displayName":"221810501001 ARUKONDA SAI KRISHNA","photoUrl":"","userId":"05734432239304171779"}}},"source":["# # Function to return the sum of digits in a given string\n","# Example :\n","# Input : Appli1cat8ion89\n","# Output : 16(8+8)\n","def sumofEvenDigits(str):\n","    sum = 0\n","    for x in range(len(str)):\n","        if ord(str[x]) >= 48 and ord(str[x]) <= 57:\n","           if (ord(str[x])-48) % 2 == 0:\n","            sum = sum + (ord(str[x])-48)\n","    return sum\n","sumofEvenDigits('Appli1cat8ion89')"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["16"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"CxFd3CytB8bM","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"1a983676-6dd5-4fb7-89fa-b70c226348ca","executionInfo":{"status":"ok","timestamp":1562581797608,"user_tz":-330,"elapsed":901,"user":{"displayName":"221810501001 ARUKONDA SAI KRISHNA","photoUrl":"","userId":"05734432239304171779"}}},"source":["# Function to print specfic word in Upper case\n","# Example :\n","# Input : Python Made Easy\n","# Output : MADE\n","# Input : Learn Python programming\n","# Output : PYTHON\n","def wordUpperCase(s):\n","    spaceCnt = 0\n","    for x in range(len(s)):\n","        if ord(s[x]) == 32:\n","            spaceCnt += 1 # spaceCnt = spaceCnt + 1\n","        if spaceCnt == 1:\n","          if ord(s[x]) >= 65 and ord(s[x]) <= 90:\n","              print(s[x],end= \" \")\n","          elif ord(s[x]) >= 97 and ord(s[x]) <= 122 :\n","             print(chr(ord(s[x])-32),end= \" \")\n","        if spaceCnt == 2:\n","          break\n","    return\n","wordUpperCase(\"Python Made Easy\") # MADE\n","      "],"execution_count":19,"outputs":[{"output_type":"stream","text":["M A D E "],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"rL_5NFu5IjLE","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}